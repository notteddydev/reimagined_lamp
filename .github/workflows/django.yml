name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent"

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set environment variables
      run: echo "DEBUG=True" >> $GITHUB_ENV

    - name: Check Python version
      run: python --version

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install pipenv
      run: pip install pipenv

    - name: Check pipenv version
      run: pipenv --version

    - name: Install Dependencies
      run: pipenv install

    - name: View MySQL Logs
      run: docker logs $(docker ps -q --filter "ancestor=mysql:5.7")

    - name: Wait for MySQL to start
      run: |
        while ! mysqladmin ping -h"mysql" --silent; do
          echo "Waiting for MySQL to start..."
          sleep 5
        done

    - name: View MySQL Logs
      run: docker logs $(docker ps -q --filter "ancestor=mysql:5.7")

    - name: Run Tests
      env:
        DJANGO_DB_HOST: mysql
        DJANGO_DB_PORT: 3306
        DJANGO_DB_NAME: ${{ secrets.DB_NAME }}
        DJANGO_DB_USER: ${{ secrets.DB_USER }}
        DJANGO_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: pipenv run python manage.py test