# Generated by Django 5.0.6 on 2024-07-11 20:52

import csv

from django.conf import settings
from django.db import migrations
from address_book import constants


def insert_address_types(apps, schema_editor):
    AddressType = apps.get_model("address_book", "AddressType")

    address_types = [
        (constants.ADDRESS_TYPE__NAME_HOME, "Home",),
        (constants.ADDRESS_TYPE__NAME_WORK, "Work",),
        (constants.ADDRESS_TYPE__NAME_DOM, "Domestic",),
        (constants.ADDRESS_TYPE__NAME_INTL, "International",),
        (constants.ADDRESS_TYPE__NAME_POSTAL, "Postal",),
        (constants.ADDRESS_TYPE__NAME_PARCEL, "Parcel",),
        (constants.ADDRESS_TYPE__NAME_PREF, "Preferred",),
        (constants.ADDRESS_TYPE__NAME_OTHER, "Other",),
    ]

    for name, verbose in address_types:
        AddressType.objects.create(name=name, verbose=verbose)

def remove_address_types(apps, schema_editor):
    AddressType = apps.get_model("address_book", "AddressType")

    AddressType.objects.all().delete()
    
    
def insert_email_types(apps, schema_editor):
    EmailType = apps.get_model("address_book", "EmailType")

    email_types = [
        (constants.EMAIL_TYPE__NAME_HOME, "Home"),
        (constants.EMAIL_TYPE__NAME_WORK, "Work"),
        (constants.EMAIL_TYPE__NAME_PREF, "Preferred"),
        (constants.EMAIL_TYPE__NAME_OTHER, "Other"),
    ]

    for name, verbose in email_types:
        EmailType.objects.create(name=name, verbose=verbose)

def remove_email_types(apps, schema_editor):
    EmailType = apps.get_model("address_book", "EmailType")

    EmailType.objects.all().delete()


def insert_nations(apps, schema_editor):
    Nation = apps.get_model("address_book", "Nation")

    with open(f"{settings.BASE_DIR}/country_data.csv", newline="") as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            Nation.objects.create(code=row["alpha-3"], verbose=row["name"])

def remove_nations(apps, schema_editor):
    Nation = apps.get_model("address_book", "Nation")

    Nation.objects.all().delete()
    
    
def insert_phonenumber_types(apps, schema_editor):
    PhoneNumberType = apps.get_model("address_book", "PhoneNumberType")

    phonenumber_types = [
        (constants.PHONENUMBER_TYPE__NAME_HOME, "Home"),
        (constants.PHONENUMBER_TYPE__NAME_WORK, "Work"),
        (constants.PHONENUMBER_TYPE__NAME_CELL, "Mobile"),
        (constants.PHONENUMBER_TYPE__NAME_FAX, "Fax"),
        (constants.PHONENUMBER_TYPE__NAME_PAGER, "Pager"),
        (constants.PHONENUMBER_TYPE__NAME_VOICE, "Voice"),
        (constants.PHONENUMBER_TYPE__NAME_VIDEO, "Video"),
        (constants.PHONENUMBER_TYPE__NAME_TEXT, "Text"),
        (constants.PHONENUMBER_TYPE__NAME_TEXTPHONE, "Textphone"),
        (constants.PHONENUMBER_TYPE__NAME_PREF, "Preferred"),
        (constants.PHONENUMBER_TYPE__NAME_OTHER, "Other"),
    ]

    for name, verbose in phonenumber_types:
        PhoneNumberType.objects.create(name=name, verbose=verbose)

def remove_phonenumber_types(apps, schema_editor):
    PhoneNumberType = apps.get_model("address_book", "PhoneNumberType")

    PhoneNumberType.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('address_book', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(insert_address_types, remove_address_types),
        migrations.RunPython(insert_email_types, remove_email_types),
        migrations.RunPython(insert_nations, remove_nations),
        migrations.RunPython(insert_phonenumber_types, remove_phonenumber_types),
    ]
